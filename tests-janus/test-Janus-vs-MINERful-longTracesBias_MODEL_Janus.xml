<?xml version="1.0" encoding="UTF-8" standalone="no"?><model><assignment language="ConDec" name="Process model discovered out of test-Janus-vs-MINERful-longTracesBias.xes"><activitydefinitions><activity id="65" name="a"/><activity id="66" name="b"/></activitydefinitions><constraintdefinitions><constraint id="1" mandatory="true"><condition/><name>init</name><template><description>Each instance has to start with execution of &lt;b&gt;a&lt;/b&gt;.</description><display>init</display><name>init</name><text>( ( "A.started" \/ "A.cancelled" ) W  "A" );support;1.000000;confidence;1.000000;IF;1.000000</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either:
&lt;ul&gt;
&lt;li&gt;none of the tasks in this instance were executed yet, or&lt;/li&gt;
&lt;li&gt;the first executed task is &amp;quot;A&amp;quot;.&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because the first executed task 
in this instance was not "A".  &lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="a"/></branches></parameter></constraintparameters></constraint><constraint id="2" mandatory="true"><condition/><name>existence</name><template><description>&lt;b&gt;a&lt;/b&gt; has to be executed at least once.</description><display>1..*</display><name>existence</name><text>&lt;&gt; ( "A" );support;1.000000;confidence;1.000000;IF;1.000000</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;Task &amp;quot;A&amp;quot; has been executed at least one before.&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;
&lt;p&gt;Task &amp;quot;A&amp;quot; has not been executed yet. &lt;/p&gt;
&lt;p&gt;To satisfy this constraint you must execite task &amp;quot;A&amp;quot;.&lt;/p&gt;&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;Task &amp;quot;A&amp;quot; has never been executed.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="a"/></branches></parameter></constraintparameters></constraint><constraint id="3" mandatory="true"><condition/><name>absence2</name><template><description>A can happen at most once.</description><display>0..1</display><name>absence2</name><text>! ( &lt;&gt; ( ( "A" /\ X(&lt;&gt;("A")) ) ) );support;0.100000;confidence;1.000000;IF;1.000000</text><parameters><parameter branchable="false" id="1" name="A"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="b"/></branches></parameter></constraintparameters></constraint><constraint id="4" mandatory="true"><condition/><name>precedence</name><template><description>&lt;b&gt;b&lt;/b&gt; has to be preceded by &lt;b&gt;a&lt;/b&gt;. &lt;b&gt;b&lt;/b&gt; can happen only after &lt;b&gt;a&lt;/b&gt; had happened.</description><display>precedence</display><name>precedence</name><text> ( ! ("B" ) U "A" ) \/ ([](!("B"))) /\  ! ("B" );support;0.100000;confidence;1.000000;IF;1.000000</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">&lt;html&gt;This constraint is satisfied because either: 
&lt;ul&gt;
&lt;li&gt;task &amp;quot;B&amp;quot; was never executed, or&lt;/li&gt;
&lt;li&gt;first task &amp;quot;A&amp;quot; was executed, and then task &amp;quot;B&amp;quot; was executed. &lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;</message><message state="VIOLATED_TEMPORARY">&lt;html&gt;This should never happen!&lt;/html&gt;</message><message state="VIOLATED">&lt;html&gt;This constraint is violated because task &amp;quot;B&amp;quot; was executed before task &amp;quot;A&amp;quot;.&lt;/html&gt;</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="a"/></branches></parameter><parameter templateparameter="2"><branches><branch name="b"/></branches></parameter></constraintparameters></constraint><constraint id="5" mandatory="true"><condition/><name>alternate precedence</name><template><description>B cannot happen before A. After it happens, it can not happen before the next A again.</description><display>alternate precedence</display><name>alternate precedence</name><text>(    ( !( "B" ) U "A" )  )  /\  ( ( "B" -&gt;  X(   ( !( "B" ) U "A" )       ) ) ) ) /\  ! ("B" );support;0.100000;confidence;1.000000;IF;1.000000</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="2"/><begin fill="true" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="2"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="a"/></branches></parameter><parameter templateparameter="2"><branches><branch name="b"/></branches></parameter></constraintparameters></constraint><constraint id="6" mandatory="true"><condition/><name>chain precedence</name><template><description>B can be executed only directly after A.</description><display>chain precedence</display><name>chain precedence</name><text>[]( ( X( "B" ) -&gt; "A") )/\  ! ("B" );support;0.100000;confidence;1.000000;IF;1.000000</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="3"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="3"/><begin fill="true" style="10"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="a"/></branches></parameter><parameter templateparameter="2"><branches><branch name="b"/></branches></parameter></constraintparameters></constraint><constraint id="7" mandatory="true"><condition/><name>responded existence</name><template><description>If A happen (at least once) then B has to have (at least once) happpend before of has to happen after A. </description><display>responded existence</display><name>responded existence</name><text>( &lt;&gt;("A") -&gt; &lt;&gt;( "B" ) );support;0.100000;confidence;1.000000;IF;1.000000</text><parameters><parameter branchable="true" id="1" name="A"><graphical><style number="1"/><begin fill="true" style="5"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter><parameter branchable="true" id="2" name="B"><graphical><style number="1"/><begin fill="false" style="0"/><middle fill="false" style="0"/><end fill="false" style="0"/></graphical></parameter></parameters><statemessages><message state="SATISFIED">SATISFIED undefined</message><message state="VIOLATED_TEMPORARY">VIOLATED_TEMPORARY undefined</message><message state="VIOLATED">VIOLATED undefined</message></statemessages></template><constraintparameters><parameter templateparameter="1"><branches><branch name="b"/></branches></parameter><parameter templateparameter="2"><branches><branch name="a"/></branches></parameter></constraintparameters></constraint></constraintdefinitions><graphical><activities><cell height="50.0" id="65" width="90.0" x="139.1977235189" y="0.0"/><cell height="50.0" id="66" width="90.0" x="25.986575268899944" y="0.0"/></activities><constraints><cell height="1.0" id="4" width="1.0" x="184.36926265265464" y="127.96642710076327"/><cell height="1.0" id="5" width="1.0" x="39.84292468621294" y="122.31328741248387"/><cell height="1.0" id="6" width="1.0" x="103.48574437203449" y="129.79790385079627"/><cell height="1.0" id="7" width="1.0" x="2.5" y="15.05520936139996"/></constraints></graphical></assignment></model>